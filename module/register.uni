component BusRegister<count>(in clock, in selector[#selector(#count)], in source[#bit_width:0][#count:0], out destination[#register]) {
    Register buffer := 0
    Register data := 0
    destination := data

    on rising clock {
        if #count > 0 && &selector == 0 {
            buffer := source[#bit_width +:: selector * #bit_width]
        }
    }

    on falling clock {
        data := buffer
    }
}

component BufferedBusRegister<count>(in clock, in selector[#selector(#count)], in source[#bit_width:0][#count:0], out destination[#register], out internal[#register]) {
    Register buffer := 0
    Register data := 0
    internal := buffer
    destination := data

    on rising clock {
        if #count > 0 && &selector == 0 {
            buffer := source[selector]
        }
    }

    on falling clock {
        data := buffer
    }
}
