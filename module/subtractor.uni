component HalfSubtractor(in input0, in input1, out difference, out borrow) {
    difference := input0 ^ input1
    borrow := !input0 & input1
}

component FullSubtractor(in input0, in input1, in borrow_in, out difference, out borrow_out) {
    difference := input0 ^ input1 ^ borrow_in
    borrow := (!input0 & input1) | (!(input0 ^ input1) & borrow_in)
}

component Subtractor(in input0[#bit_range], in input1[#bit_range(1)], out difference[#bit_range(1)], out borrow_out) {
    Wire borrow[#bit_width]
    HalfSubtractor(input0[0], input1[0], difference[0], borrow[0])
    borrow_out := borrow[#bit_width - 1]
}

component SubtractorComponent(in clock, in bus[bus_range], in selectors[#selector_range(2)], out destinations[#bit_range(4)]) {
    Wire borrow_out
    BusRegister(clock, bus, selectors[#selector(0)], destinations[#bits(0)])
    BusRegister(clock, bus, selectors[#selector(1)], destinations[#bits(1)])
    Subtractor(destinations[#bits(0)], destinations[#bits(1)], destinations[#bits(2)], borrow_out)
    destinations[#bits(3)] := #bit_width[borrow_out]
}
